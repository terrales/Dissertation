i think we could uh i i 'm really thinking outside the box here , and i think that we should consider perhaps having an an an a a size uh { vocalsound } { disfmarker } a remote control that changes in size depending on the user preference .
titanium .
titanium would be { vocalsound } be heavy , too , yeah , and that 's fine .
okay .
so , basically , the method that we usually use in the user interface design is that we need to look at what people like and what people do n't like about existing products .
so , in our case , existing remote controls .
and then , what the good ideas are , and what the bad ideas are , and why they 're bad and good , which is n't always as obvious .
we seem to have intuitions about why things are good or things are bad , but when you look , technically , at how it works , sometimes that 's not the case .
then we need to decide what functionalities we really want to keep , 'cause that 'll feed into both ed 's work and christine 's work .
um and then what the remote control should look like , obviously , once we 've got a good idea of what the functionalities are .
so , in terms of the functionalities that we need , you obviously need to be able to turn the t_v_ on and off .
you need to change channels , both by directly going to a specific channel or by channel surfing .
you need to be able to control the volume and then control any menus on the t_v_ to regulate contrast or whatever .
so , the problems that people have expressed is that there 's too many buttons on remote controls , in general .
the buttons { disfmarker } it 's not clear what they 're supposed to do .
um often , you need to know specific button sequences { vocalsound } to get certain functionalities done , um which you do n't necessarily always remember , especially if it 's a functionality that you do n't use very often .
and that the buttons are too small .
so , here we 've got two examples where here on the left-hand side , you can see a remote control that has lots and lots of buttons .
